<?xml version="1.0" encoding="utf-8"?>
<!--
* Copyright (c) 2011 Tuomas Artman, http://artman.fi
* 
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
* 
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
* THE SOFTWARE.
-->

<fw:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:fw="http://artman.fi/flow"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				frameRate="45" xmlns:view="com.flow.view.*" >
	<fx:Script>
		<![CDATA[
			import assets.WindowBkg;
			
			import com.flow.commands.InitApplicationCommand;
			import com.flow.managers.TextFormatManager;
			import com.flow.skins.ButtonSkin;
			import com.flow.skins.TextInputSkin;
			
			import flash.filters.DropShadowFilter;
			import flash.net.navigateToURL;
			
			import mx.utils.ObjectProxy;
			
			override protected function preInitialize():void {
				new InitApplicationCommand();
				
				var contextMenu:ContextMenu = new ContextMenu();
				
				var viewSource:ContextMenuItem = new ContextMenuItem("View Source", true);
				viewSource.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, openViewSource);
				contextMenu.customItems.push(viewSource);
				contextMenu.hideBuiltInItems();
				this.contextMenu = contextMenu;
				
			}

			protected function openViewSource(event:ContextMenuEvent):void {
				navigateToURL(new URLRequest("https://github.com/artman/Flow/tree/master/examples/src"), "_blank");
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:Array id="segmentTitles">
			<fx:String>Absolute layout</fx:String>
			<fx:String>Box layout</fx:String>
			<fx:String>Components</fx:String>
<<<<<<< HEAD
<<<<<<< HEAD
=======
			<fx:String>Remote procedures</fx:String>
>>>>>>> Housekeeping
=======
			<fx:String>Transitions</fx:String>
<<<<<<< HEAD
			<fx:String>Remote procedures</fx:String>
>>>>>>> Added remote procedures, container templates. Added padding shortcuts
=======
			<!--fx:String>Remote procedures</fx:String-->
>>>>>>> Fixed width layout problem with ScrollPane.
		</fx:Array>
	</fx:Declarations>
	
	<fw:fill>
		<fw:BitmapFill source="@Embed(source='/assets/app_bkg.png')" />
	</fw:fill>

	
	<fw:Container horizontalCenter="0" verticalCenter="0">
		
		<fw:Image filters="{[new DropShadowFilter(6, 90, 0, 0.3, 20, 20, 1, 2)]}" left="-1" right="-2" height="100%" source="{WindowBkg}" />
		<fw:Label textFormat="heading" x="10" y="2" text="{sectionCounter.selectedItem}" filters="{[new DropShadowFilter(1, 90, 0, 0.2, 2, 2)]}" />
		
		<fw:ScrollArea scrollSpeed="0.5" snapWidthToEven="true" snapHeightToEven="true" id="section" top="37" bottom="38" selectedIndex="{sectionCounter.selectedIndex}">
			<view:BasicLayoutView />			
			<view:BoxLayout />
			<view:ControlsView />
			<view:TransitionsView />
			<view:RemoteProceduresView />
		</fw:ScrollArea>
		
		<fw:Container width="100%" height="40" bottom="0">
			<fw:List id="sectionCounter" width="100%" height="20" verticalCenter="0" dataProvider="{segmentTitles}" selectedIndex="0">
				<fw:layout>
					<fw:HBoxLayout spacing="5" horizontalAlign="center" verticalAlign="middle" />
				</fw:layout>
				<fw:itemRenderer>
					<fx:Component>
						<fw:Label paddingTop="2" interactive="true" width="20" height="20" text="{rendererIndex+1}" align="center" color="0" color.selected="0xFFFFFF">
							<fw:states>
								<s:State name="up" />
								<s:State name="over" />
								<s:State name="selected" />
							</fw:states>
							
							<fw:stroke>
								<fw:SolidStroke color="0xDDDDDD" color.over="0xBBBBBB" />
							</fw:stroke>
						
							<fw:fill>
								<fw:GradientFill rotation="90">
									<fw:GradientData color="0xEEEEEE" color.over="0xDDDDDD" color.selected="0xDD0000" ratio="0" />
									<fw:GradientData color="0xFFFFFF" color.selected="0xDD0000" ratio="1" />
								</fw:GradientFill>
							</fw:fill>
						</fw:Label>
					</fx:Component>
				</fw:itemRenderer>
			</fw:List>
			<fw:Button id="prev" disabled="{sectionCounter.selectedIndex==0}" label="Prev" skinClass="{new ButtonSkin}" verticalCenter="0" left="8" click="sectionCounter.selectedIndex--" />
			<fw:Button id="next" disabled="{sectionCounter.selectedIndex == sectionCounter.dataProvider.length-1}" label="Next" skinClass="{new ButtonSkin}" verticalCenter="0" right="8" click="sectionCounter.selectedIndex++" />
		</fw:Container>
	
	</fw:Container>
</fw:Application>
